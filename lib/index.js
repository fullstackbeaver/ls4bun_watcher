// @bun
import*as B from"fs";var x={},C={},D={};async function G(j,k){if(k){for(let[z,q]of Object.entries(k))x[z]=q.action,q.useOnFirstStart&&q.action();Object.assign(C,j)}Object.assign(D,Bun.serve(j)),console.log("server started!"+j.host+":"+j.port)}async function E(j){console.log("Reloading server...",j);for(let k of j)if(x[k])x[k].constructor.name==="AsyncFunction"?await x[k]():x[k]();D.reload(C),console.log("Server reloaded")}function H(j,k){for(let z of j)B.watch(z,(q,F)=>{if(q==="change")E(k(z))})}export{H as useWatcher,G as useServer,E as reloadServer};
